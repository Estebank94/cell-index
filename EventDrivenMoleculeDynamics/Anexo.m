clcclear allclose allm = (0:0.00001:0.0009); %valor de pendiente. Determia la cantidad de ecuaciones 'y' que voy a tenert = (30:5:195); %Valor de t, donde voy a evaluar la funcion 'y'% 2.5611e-04 - (0:0.00007:0.0009)for i=1:length(m)  for j = 1:length(t)     y(i,j) = m(i)*t(j); %Matriz de valor de 'ym'. Columnas = y(t) Filas = Cada Ym  endforendforfigure(1)for i = 1:length(m)plot(t,y(i,:),'b-')%text(195,y(i,length(y)),num2str(i-1))hold on  end xlabel('Tiempo [s]')ylabel('y(t)')%title('Grafico de y(t) para distintas pendientes')%grid on%grid minord = dlmread('valuesForGraph.txt')figure(1)plot(t,d,'r-')%title('Grafico de los valores de MSD')error = 0; % for externo, me va a agarrar la fila del 'm' correspondiente en 'y'for i = 1:length(m) c = y(i,:);  %ahora voy a recorrer y tomar los valores de 'd'  for j = 1:length(d)   error += (d(j) - c(j))^2;  endfor  e(i,1) = error;  error = 0;endforefigure(2)for i = 1:length(m)plot(m,e(:,1),'r.')xlabel('Pendientes');ylabel('Error');%title('Error entre DCM y las distintas pendientes planteadas')hold on endforfigure(3)for i = 1:length(m)index = find(e == min(e));plot(t,y(index,:),'b-')xlabel('Tiempo [s]')ylabel('y(t)')%title('Grafico de la funcion con menor error vs. DCM ')hold on endform(index)figure(3)plot(t,d,'r-')